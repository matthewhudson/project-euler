"""
Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not
exceed four million.
"""
#Fibonacci implemented with Memoization, courtesy: http://en.literateprograms.org/Fibonacci_numbers_(Python)#Recursion_with_memoization
memo = {0:0, 1:1}
def fib(n):
    if not n in memo:
        memo[n] = fib(n-1) + fib(n-2)
    return memo[n]

n = 0
foo = []
while fib(n) <= 4000000:
    foo.append(fib(n))
    n = n+1
    
print sum(filter(lambda x: x % 2 == 0, foo))


